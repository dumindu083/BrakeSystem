/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import FileConnection.IO;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.UIManager;

/**
 *
 * @author Dumindu
 */
public class Controller extends javax.swing.JFrame implements ActionListener {

    /**
     * Controller window of the Fuzzy Engine
     *
     */
    Timer t = new Timer(13, this);
    IO io = new IO();

    byte length = 23;

    int position = 38;
    int speed = 25;

    int position2 = 38;
    int speed2 = 15;

    int position3 = 38;
    int speed3 = 10;

    int position4 = 38;
    int speed4 = 13;

    int position5 = 38;
    int speed5 = 18;

    int position6 = 38;
    int speed6 = 23;

    public Controller() {

        initComponents();
        setIcon("car_brake.png");

    }

    /**
     *
     * @param imageName
     */
    public void setIcon(String imageName) {
        BufferedImage image = null;
        try {
            image = ImageIO.read(this.getClass().getResource(imageName));

        } catch (IOException ex) {
            System.out.println(ex.getMessage());
        }
        setIconImage(image);
    }

    public void clearValues() {// reset all the text fields inclufing radio button

        btnRed.setSelected(false);
        btnGreen.setSelected(false);
        btnBlue.setSelected(false);
        btnOrange.setSelected(false);
        btnYellow.setSelected(false);
        btnPurple.setSelected(false);

        txtObstacle.setText("");
        txtBF.setText("");
        txtSR.setText("");
        txtPWM.setText("");

        if (btnCheckMotion.isEnabled() && btnPlotGraphs.isEnabled()) {
            btnCheckMotion.setEnabled(false);
            btnPlotGraphs.setEnabled(false);
        }

        btnRed.setEnabled(true);
        btnGreen.setEnabled(true);
        btnBlue.setEnabled(true);
        btnYellow.setEnabled(true);
        btnOrange.setEnabled(true);
        btnPurple.setEnabled(true);

    }

    public boolean isNumeric(String number) {//method to check if a string is numeric or not
        try {
            double d = Double.parseDouble(number);

        } catch (NumberFormatException ex) {
            return false;
        }
        return true;

    }

    public void showWarning(String message) {//shows a warning message
        JOptionPane.showMessageDialog(null, message, this.getTitle(), JOptionPane.WARNING_MESSAGE);
    }

    public void showError(String message) {
        JOptionPane.showMessageDialog(null, message, this.getTitle(), JOptionPane.ERROR_MESSAGE);
    }

    public void viewRules() {
        try {
            Runtime.getRuntime().exec("Notepad " + "rules.txt");
        } catch (Exception e) {
            this.showError("Error in Viewing Rules");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ColorGroup = new javax.swing.ButtonGroup();
        pnlGraphics = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtObstacle = new javax.swing.JTextField();
        txtBF = new javax.swing.JTextField();
        txtSR = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        pnlRed = new javax.swing.JPanel();
        pnlYellow = new javax.swing.JPanel();
        pnlGreen = new javax.swing.JPanel();
        pnlOrange = new javax.swing.JPanel();
        pnlBlue = new javax.swing.JPanel();
        pnlPurple = new javax.swing.JPanel();
        btnRed = new javax.swing.JRadioButton();
        btnYellow = new javax.swing.JRadioButton();
        btnGreen = new javax.swing.JRadioButton();
        btnBlue = new javax.swing.JRadioButton();
        btnOrange = new javax.swing.JRadioButton();
        btnPurple = new javax.swing.JRadioButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtPWM = new javax.swing.JTextField();
        btnPlotGraphs = new javax.swing.JButton();
        btnCheckMotion = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        btnCalculate = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnRules = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Braking System");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        pnlGraphics.setBackground(new java.awt.Color(255, 255, 255));
        pnlGraphics.setEnabled(false);

        javax.swing.GroupLayout pnlGraphicsLayout = new javax.swing.GroupLayout(pnlGraphics);
        pnlGraphics.setLayout(pnlGraphicsLayout);
        pnlGraphicsLayout.setHorizontalGroup(
            pnlGraphicsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        pnlGraphicsLayout.setVerticalGroup(
            pnlGraphicsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 228, Short.MAX_VALUE)
        );

        jPanel2.setBackground(java.awt.Color.darkGray);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Inputs"));

        jLabel1.setText("Obstacle Distance");

        jLabel2.setText("Brake Force");

        jLabel3.setText("Slip Ratio");

        txtObstacle.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        txtBF.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        txtSR.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtObstacle, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                    .addComponent(txtBF)
                    .addComponent(txtSR))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtObstacle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtBF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtSR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Select Object(s)"));
        jPanel7.setMinimumSize(new java.awt.Dimension(160, 160));

        pnlRed.setBackground(new java.awt.Color(255, 0, 0));
        pnlRed.setPreferredSize(new java.awt.Dimension(15, 15));

        javax.swing.GroupLayout pnlRedLayout = new javax.swing.GroupLayout(pnlRed);
        pnlRed.setLayout(pnlRedLayout);
        pnlRedLayout.setHorizontalGroup(
            pnlRedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 23, Short.MAX_VALUE)
        );
        pnlRedLayout.setVerticalGroup(
            pnlRedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 23, Short.MAX_VALUE)
        );

        pnlYellow.setBackground(new java.awt.Color(255, 255, 0));
        pnlYellow.setPreferredSize(new java.awt.Dimension(15, 15));

        javax.swing.GroupLayout pnlYellowLayout = new javax.swing.GroupLayout(pnlYellow);
        pnlYellow.setLayout(pnlYellowLayout);
        pnlYellowLayout.setHorizontalGroup(
            pnlYellowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 23, Short.MAX_VALUE)
        );
        pnlYellowLayout.setVerticalGroup(
            pnlYellowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 23, Short.MAX_VALUE)
        );

        pnlGreen.setBackground(new java.awt.Color(0, 255, 0));
        pnlGreen.setPreferredSize(new java.awt.Dimension(15, 15));

        javax.swing.GroupLayout pnlGreenLayout = new javax.swing.GroupLayout(pnlGreen);
        pnlGreen.setLayout(pnlGreenLayout);
        pnlGreenLayout.setHorizontalGroup(
            pnlGreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 23, Short.MAX_VALUE)
        );
        pnlGreenLayout.setVerticalGroup(
            pnlGreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 23, Short.MAX_VALUE)
        );

        pnlOrange.setBackground(new java.awt.Color(255, 135, 69));
        pnlOrange.setPreferredSize(new java.awt.Dimension(15, 15));

        javax.swing.GroupLayout pnlOrangeLayout = new javax.swing.GroupLayout(pnlOrange);
        pnlOrange.setLayout(pnlOrangeLayout);
        pnlOrangeLayout.setHorizontalGroup(
            pnlOrangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 23, Short.MAX_VALUE)
        );
        pnlOrangeLayout.setVerticalGroup(
            pnlOrangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 23, Short.MAX_VALUE)
        );

        pnlBlue.setBackground(new java.awt.Color(0, 0, 255));
        pnlBlue.setPreferredSize(new java.awt.Dimension(15, 15));

        javax.swing.GroupLayout pnlBlueLayout = new javax.swing.GroupLayout(pnlBlue);
        pnlBlue.setLayout(pnlBlueLayout);
        pnlBlueLayout.setHorizontalGroup(
            pnlBlueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 23, Short.MAX_VALUE)
        );
        pnlBlueLayout.setVerticalGroup(
            pnlBlueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 23, Short.MAX_VALUE)
        );

        pnlPurple.setBackground(new java.awt.Color(204, 0, 204));
        pnlPurple.setPreferredSize(new java.awt.Dimension(15, 15));

        javax.swing.GroupLayout pnlPurpleLayout = new javax.swing.GroupLayout(pnlPurple);
        pnlPurple.setLayout(pnlPurpleLayout);
        pnlPurpleLayout.setHorizontalGroup(
            pnlPurpleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 23, Short.MAX_VALUE)
        );
        pnlPurpleLayout.setVerticalGroup(
            pnlPurpleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 23, Short.MAX_VALUE)
        );

        btnRed.setText("Red");
        btnRed.setToolTipText("Double-click to select all");
        btnRed.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRedMouseClicked(evt);
            }
        });

        btnYellow.setText("Yellow");

        btnGreen.setText("Green");

        btnBlue.setText("Blue");

        btnOrange.setText("Orange");

        btnPurple.setText("Purple");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(pnlRed, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnRed))
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel7Layout.createSequentialGroup()
                            .addComponent(pnlYellow, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(btnYellow, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel7Layout.createSequentialGroup()
                            .addComponent(pnlGreen, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(btnGreen))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 3, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(pnlPurple, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnPurple))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(pnlBlue, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnBlue))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(pnlOrange, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnOrange)))
                .addContainerGap())
        );

        jPanel7Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {pnlBlue, pnlGreen, pnlOrange, pnlPurple, pnlRed, pnlYellow});

        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnRed, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pnlRed, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pnlYellow, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnYellow))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pnlGreen, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnGreen)))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(pnlBlue, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnBlue))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pnlOrange, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnOrange))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(pnlPurple, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnPurple))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {pnlBlue, pnlGreen, pnlOrange, pnlPurple, pnlRed, pnlYellow});

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Output"));

        jLabel4.setText("PWM");

        txtPWM.setEditable(false);
        txtPWM.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtPWM.setToolTipText("Pulse Width Modulation");

        btnPlotGraphs.setText("Plot Graphs");
        btnPlotGraphs.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPlotGraphs.setEnabled(false);
        btnPlotGraphs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlotGraphsActionPerformed(evt);
            }
        });

        btnCheckMotion.setText("Check Motion");
        btnCheckMotion.setToolTipText("Move selected Objects");
        btnCheckMotion.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCheckMotion.setEnabled(false);
        btnCheckMotion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckMotionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                        .addComponent(txtPWM, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnPlotGraphs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCheckMotion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtPWM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCheckMotion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPlotGraphs)
                .addContainerGap())
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Control"));

        btnCalculate.setText("Calculate");
        btnCalculate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCalculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalculateActionPerformed(evt);
            }
        });

        btnReset.setText("Reset");
        btnReset.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnRules.setText("View Rules");
        btnRules.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRules.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRulesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCalculate, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
                    .addComponent(btnReset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnRules, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnCalculate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRules)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnReset)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 127, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlGraphics, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlGraphics, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        if (t.isRunning()) {
            t.stop();
        }
        clearValues();

        Graphics g = pnlGraphics.getGraphics();

        resetGraphics(g);

        drawShapes(g);


    }//GEN-LAST:event_btnResetActionPerformed

    private void btnPlotGraphsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlotGraphsActionPerformed
        // TODO add your handling code here:

        IO io = new IO();

        io.setObstacle(Double.parseDouble((txtObstacle.getText())));
        io.setBrakeForce(Double.parseDouble(txtBF.getText()));
        io.setSlipRatio(Double.parseDouble(txtSR.getText()));

        io.plotGraphs(io);


    }//GEN-LAST:event_btnPlotGraphsActionPerformed

    private void btnCalculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalculateActionPerformed
        // TODO add your handling code here:
        Controller c = new Controller();

        if (!btnRed.isSelected() && !btnYellow.isSelected() && !btnGreen.isSelected() && !btnBlue.isSelected()
                && !btnOrange.isSelected() && !btnPurple.isSelected()) {
            c.showWarning("Select preferred object(s)...");
            btnRed.grabFocus();
        } else if (txtObstacle.getText().isEmpty()) {
            c.showWarning("Place an obstacle length to stop the movement");
            txtObstacle.grabFocus();
        } else if ((!c.isNumeric(txtObstacle.getText())) || Double.parseDouble(txtObstacle.getText()) > 100 || Double.parseDouble(txtObstacle.getText()) < 0) {
            c.showWarning("Enter Obstacle length as a positive numerical value, below 100");
            txtObstacle.grabFocus();
            txtObstacle.selectAll();
        } else if (txtBF.getText().isEmpty()) {
            c.showWarning("Set a Brake Force");
            txtBF.grabFocus();
        } else if ((!c.isNumeric(txtBF.getText())) || Double.parseDouble(txtBF.getText()) > 100 || Double.parseDouble(txtSR.getText()) < 0) {
            c.showWarning("Enter Brake Force as a positive numerical value, below 100");
            txtBF.grabFocus();
            txtBF.selectAll();
        } else if (txtSR.getText().isEmpty()) {
            c.showWarning("Set a Slip Ratio value");
            txtSR.grabFocus();
        } else if ((!c.isNumeric(txtSR.getText())) || Double.parseDouble(txtSR.getText()) > 100 || Double.parseDouble(txtSR.getText()) < 0) {
            c.showWarning("Enter Slip Ratio as a positive numerical value, below 100");
            txtSR.grabFocus();
            txtSR.selectAll();
        } else {

            IO io = new IO();

            io.setObstacle(Double.parseDouble((txtObstacle.getText())));
            io.setBrakeForce(Double.parseDouble(txtBF.getText()));
            io.setSlipRatio(Double.parseDouble(txtSR.getText()));

            io.evalutaePWM(io);

            txtPWM.setText(Double.toString(io.getPWM()));

            if (!btnCheckMotion.isEnabled() || !btnPlotGraphs.isEnabled()) {
                btnCheckMotion.setEnabled(true);
                btnPlotGraphs.setEnabled(true);
            }

        }


    }//GEN-LAST:event_btnCalculateActionPerformed

    private void btnCheckMotionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckMotionActionPerformed
        // TODO add your handling code here:

        Graphics g = pnlGraphics.getGraphics();

        if (btnPurple.isSelected()) {
            this.removeObject(g, 180);
        } else if (btnOrange.isSelected()) {
            this.removeObject(g, 149);
        } else if (btnBlue.isSelected()) {
            this.removeObject(g, 118);
        } else if (btnYellow.isSelected()) {
            this.removeObject(g, 56);
        } else if (btnGreen.isSelected()) {
            this.removeObject(g, 87);
        } else if (btnRed.isSelected()) {
            this.removeObject(g, 25);
        }

        t.start();

        btnRed.setEnabled(false);
        btnGreen.setEnabled(false);
        btnBlue.setEnabled(false);
        btnYellow.setEnabled(false);
        btnOrange.setEnabled(false);
        btnPurple.setEnabled(false);


    }//GEN-LAST:event_btnCheckMotionActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        drawShapes(pnlGraphics.getGraphics());

    }//GEN-LAST:event_formWindowOpened

    private void btnRulesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRulesActionPerformed

        viewRules();

    }//GEN-LAST:event_btnRulesActionPerformed

    private void btnRedMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRedMouseClicked
        // TODO add your handling code here:

        if (evt.getClickCount() == 2) {

            btnRed.setSelected(true);
            btnGreen.setSelected(true);
            btnYellow.setSelected(true);
            btnBlue.setSelected(true);
            btnPurple.setSelected(true);
            btnOrange.setSelected(true);
        }
    }//GEN-LAST:event_btnRedMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());

        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Controller.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Controller().setVisible(true);
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup ColorGroup;
    private javax.swing.JRadioButton btnBlue;
    private javax.swing.JButton btnCalculate;
    private javax.swing.JButton btnCheckMotion;
    private javax.swing.JRadioButton btnGreen;
    private javax.swing.JRadioButton btnOrange;
    private javax.swing.JButton btnPlotGraphs;
    private javax.swing.JRadioButton btnPurple;
    private javax.swing.JRadioButton btnRed;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnRules;
    private javax.swing.JRadioButton btnYellow;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel pnlBlue;
    private javax.swing.JPanel pnlGraphics;
    private javax.swing.JPanel pnlGreen;
    private javax.swing.JPanel pnlOrange;
    private javax.swing.JPanel pnlPurple;
    private javax.swing.JPanel pnlRed;
    private javax.swing.JPanel pnlYellow;
    private javax.swing.JTextField txtBF;
    private javax.swing.JTextField txtObstacle;
    private javax.swing.JTextField txtPWM;
    private javax.swing.JTextField txtSR;
    // End of variables declaration//GEN-END:variables

    public void drawShapes(Graphics g) {

        g.setColor(pnlRed.getBackground());
        g.fillRect(25, 25, length, length);

        g.setColor(pnlYellow.getBackground());
        g.fillRect(25, 56, length, length);

        g.setColor(pnlGreen.getBackground());
        g.fillRect(25, 87, length, length);

        g.setColor(pnlBlue.getBackground());
        g.fillRect(25, 118, length, length);

        g.setColor(pnlOrange.getBackground());
        g.fillRect(25, 149, length, length);

        g.setColor(pnlPurple.getBackground());
        g.fillRect(25, 180, length, length);
    }

    public void removeObject(Graphics g, int yCoordinate) {

        g.setColor(Color.WHITE);
        g.fillRect(25, yCoordinate, length, length);
    }

    @Override
    public void actionPerformed(ActionEvent e) {

        position += speed;

        position2 += speed2;

        position3 += speed3;

        position4 += speed4;

        position5 += speed5;

        position6 += speed6;

        if (position > 5 * Double.parseDouble(txtPWM.getText())) {

            speed -= 1;
            if (speed == 0) {
                t.stop();
            }
            System.out.println("VelX IS " + speed + " X is " + position);

        }

        if (position2 > 5 * Double.parseDouble(txtPWM.getText())) {

            speed2 -= 1;
            if (speed2 == 0) {
                t.stop();
            }
        }

        if (position3 > 5 * Double.parseDouble(txtPWM.getText())) {

            speed3 -= 1;
            if (speed3 == 0) {
                t.stop();
            }
        }

        if (position4 > 5 * Double.parseDouble(txtPWM.getText())) {

            speed4 -= 1;
            if (speed4 == 0) {
                t.stop();
            }
        }

        if (position5 > 5 * Double.parseDouble(txtPWM.getText())) {

            speed5 -= 1;
            if (speed5 == 0) {
                t.stop();
            }
        }

        if (position6 > 5 * Double.parseDouble(txtPWM.getText())) {

            speed6 -= 1;
            if (speed6 == 0) {
                t.stop();
            }
        }

        if (position <= 38 || position > 851) {
//            velX = -velX;
            t.stop();
        }

        if (position2 <= 38 || position2 > 851) {
//            velX = -velX;
            t.stop();
        }

        System.err.println("X is " + position2);
        repaint();
    }

    @Override
    public void paint(Graphics g) {
        super.paint(g);

        int staticXCordinate = 38;

        if (btnRed.isSelected()) {//control of red
            g.setColor(pnlRed.getBackground());
            g.fillRect(position, 221, length, length);

        } else {
            g.setColor(pnlRed.getBackground());
            g.fillRect(staticXCordinate, 221, length, length);
        }

        if (btnYellow.isSelected()) {//control of yellow
            g.setColor(pnlYellow.getBackground());
            g.fillRect(position2, 252, length, length);

        } else {
            g.setColor(pnlYellow.getBackground());
            g.fillRect(staticXCordinate, 252, length, length);
        }

        if (btnGreen.isSelected()) {//control of green
            g.setColor(pnlGreen.getBackground());
            g.fillRect(position3, 283, length, length);

        } else {
            g.setColor(pnlGreen.getBackground());
            g.fillRect(staticXCordinate, 283, length, length);
        }

        if (btnBlue.isSelected()) {//control of blue
            g.setColor(pnlBlue.getBackground());
            g.fillRect(position4, 314, length, length);

        } else {
            g.setColor(pnlBlue.getBackground());
            g.fillRect(staticXCordinate, 314, length, length);
        }

        if (btnOrange.isSelected()) { //control of orange
            g.setColor(pnlOrange.getBackground());
            g.fillRect(position5, 345, length, length);

        } else {
            g.setColor(pnlOrange.getBackground());
            g.fillRect(staticXCordinate, 345, length, length);
        }

        if (btnPurple.isSelected()) { //control of purple
            g.setColor(pnlPurple.getBackground());
            g.fillRect(position6, 376, length, length);

        } else {
            g.setColor(pnlPurple.getBackground());
            g.fillRect(staticXCordinate, 376, length, length);
        }
    }

    public void resetGraphics(Graphics g) {

        g.clearRect(0, 0, 889, 228);
        g.setColor(Color.WHITE);
        g.fillRect(0, 0, 889, 228);

    }

}
